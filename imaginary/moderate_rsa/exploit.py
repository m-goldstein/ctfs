from Crypto.Util.number import bytes_to_long as btl, long_to_bytes as ltb, inverse, GCD
from owiener import isqrt
fp = open('output.txt','r')
e = 65537
body = fp.read()
lines = body.split('\n')[:-1]
n = int(lines[0][4:])
c = int(lines[1][4:])
p = isqrt(n)
q = n//p
tot = p * (p-1) # totient is (p-1)(q-1) only when p != q; use p(p-1) when p=q
d = inverse(e,tot)

m = pow(c,d,n)
flag = ltb(m)
print(f'flag: {flag.decode()}')
